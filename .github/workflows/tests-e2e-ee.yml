name: E2E Tests - Enterprise Edition

on:
  workflow_call:
  workflow_dispatch:

env:
  AP_EDITION: ee
  AP_DEV_PIECES: store,webhook
  AP_PIECES_SYNC_MODE: NONE
  AP_PIECES_SOURCE: FILE
  AP_API_KEY: api-key
  AP_LICENSE_KEY: ${{ secrets.EE_LICENSE_KEY }}
  AP_DB_TYPE: POSTGRES
  AP_POSTGRES_HOST: localhost
  AP_POSTGRES_PORT: 5432
  AP_POSTGRES_USERNAME: postgres
  AP_POSTGRES_PASSWORD: postgres
  AP_POSTGRES_DATABASE: activepieces
  AP_POSTGRES_USE_SSL: "false"
  AP_JWT_SECRET: "secret"
  AP_ENCRYPTION_KEY: "fdbe51af3678563560972e4a912aee6d"
  AP_FRONTEND_URL: http://localhost:4200
  AP_REDIS_URL: redis://localhost:6379
  AP_QUEUE_MODE: REDIS
  AP_EXECUTION_MODE: SANDBOX_CODE_ONLY
  AP_TELEMETRY_ENABLED: "false"
  NODE_ENV: test

jobs:
  test-e2e-ee:
    runs-on: depot-ubuntu-24.04
    timeout-minutes: 30
    
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: activepieces
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
        
      - name: Run E2E tests
        run: |
          npm run test:e2e
        env:
          CI: true
          
      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-ee
          path: packages/tests-e2e/playwright-report/
          retention-days: 30
          
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-ee
          path: packages/tests-e2e/test-results/
          retention-days: 30
          
      - name: Notify on failure
        if: failure()
        run: |
          echo "::error::Enterprise Edition E2E tests failed. This may indicate licensing or advanced feature issues."
