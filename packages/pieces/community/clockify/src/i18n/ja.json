{
  "Clockify": "Clockify",
  "You can obtain your API key by navigating to **Preferences->Advanced**.": "API キーは **Preferences->Advanced** に移動して取得できます。",
  "Create Task": "タスクを作成",
  "Create Time Entry": "タイムエントリを作成",
  "Start Timer": "開始タイマー",
  "Stop Timer": "停止タイマー",
  "Find Task": "タスクを検索",
  "Find Time Entry": "タイムエントリを検索",
  "Find Running Timer": "実行中のタイマーを検索",
  "Custom API Call": "カスタムAPI通話",
  "Creates a new in a specific project.": "特定のプロジェクトに新規作成します。",
  "Creates a new time entry.": "新しいタイムエントリを作成します。",
  "Starts a new time entry.": "新しい時刻の入力を開始します。",
  "Stops currently running timer on specified workspace.": "指定されたワークスペースで現在実行中のタイマーを停止します。",
  "Finds an existing task in a specific project.": "特定のプロジェクトの既存のタスクを検索します。",
  "Finds a time entry by description, start datetime or end datetime.": "時刻の項目を説明、開始日時、終了日時で検索します。",
  "Finds currently running timer on specified workspace.": "指定されたワークスペースで現在実行中のタイマーを検索します。",
  "Make a custom API call to a specific endpoint": "特定のエンドポイントへのカスタム API コールを実行します。",
  "Workspace": "ワークスペース",
  "Project": "プロジェクト",
  "Task Name": "タスク名",
  "Status": "ステータス",
  "Assignee": "Assignee",
  "Start Datetime": "開始日時",
  "End Datetime": "終了日時",
  "Entry Description": "エントリの説明",
  "Task": "タスク",
  "Billable": "請求可能",
  "Tags": "タグ",
  "Exact Match ?": "完全一致 ?",
  "Method": "方法",
  "Headers": "ヘッダー",
  "Query Parameters": "クエリパラメータ",
  "Body": "本文",
  "Response is Binary ?": "応答はバイナリですか?",
  "No Error on Failure": "失敗時にエラーはありません",
  "Timeout (in seconds)": "タイムアウト（秒）",
  "Authorization headers are injected automatically from your connection.": "認証ヘッダは接続から自動的に注入されます。",
  "Enable for files like PDFs, images, etc..": "PDF、画像などのファイルを有効にします。",
  "Active": "有効",
  "Done": "完了",
  "All": "すべて",
  "GET": "取得",
  "POST": "POST",
  "PATCH": "PATCH",
  "PUT": "PUT",
  "DELETE": "削除",
  "HEAD": "頭",
  "New Task": "新しいタスク",
  "New Time Entry": "新しい時間入力",
  "New Timer Started": "新しいタイマーが開始されました",
  "Triggers when a new task is created in specified project.": "指定したプロジェクトで新しいタスクが作成されたときにトリガーされます。",
  "Triggers when a new time entry is created.": "新しい時間エントリが作成されたときにトリガーします。",
  "Triggers when a new entry is started and running.": "新しいエントリが起動して実行されたときにトリガーします。"
}