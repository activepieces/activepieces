{
  "DIMO": "DIMO",
  "DIMO is an open protocol using blockchain to establish universal digital vehicle identity, permissions, data transmission, vehicle control, and payments. Developers use DIMO to build apps based on connected vehicles around the world while the vehicle owners benefit from monetizing their vehicle data.": "DIMO是一个开放式的协议，使用区块链来建立通用的数字车辆特征、许可、数据传输、车辆控制和付款。 开发者使用DIMO构建基于世界各地连接的车辆的应用，而车辆所有者则得益于将其车辆数据货币化。",
  "Client ID": "客户端ID",
  "Redirect URI": "重定向 URI",
  "API Key": "API 密钥",
  "You can obtain following credentials by creating Developer License at [Developer Console](https://console.dimo.org/).": "您可以通过在 [开发者控制台](https://console.dimo.org/ )创建开发者许可来获取以下凭据。",
  "Attestation : Create VIN VC": "证明：创建 VIN VC",
  "Device Definitions : Decode VIN": "设备定义：解码 VIN",
  "Device Definitions : Lookup": "设备定义：查询",
  "Token Exchange : Get Vehicle JWT": "Token Exchange : Get Vicle JWT",
  "Identity : Custom Query": "身份: 自定义查询",
  "Identity : Total Vehicle Count": "身份：车辆总数",
  "Identity : Get Developer License Info": "身份: 获取开发者许可证信息",
  "Identity : Get Vehicle By Dev License": "身份：通过开发许可证获取车辆",
  "Identity : Get Total Vehicle Count For Owner.": "身份：获取所有者的车辆总数。",
  "Identity : Get Vehicle MMY By Owner": "身份: 按所有者获得车辆MMY",
  "Identity : Get Vehicle MMY By TokenId": "身份 : 通过TokenId 获取车辆MMY",
  "Identity : Get SACD For Vehicle": "身份： 为车辆获得SACD",
  "Identity : Get Rewards By Owner": "身份: 按所有者获得奖励",
  "Identity : Get Reward History By Owner": "身份： 按所有者获得奖励历史",
  "Identity : Get Device Definition": "身份: 获取设备定义",
  "Identity : Get Device Definition By DefinitionId": "身份: 通过定义ID获取设备定义",
  "Identity : Get Owner Vehicles": "身份: 获取所有者车辆",
  "Identity : Get Developer Shared Vehicles From Owner": "身份: 从所有者处获取开发者共享的车辆",
  "Identity : Get DCNs By Owner": "身份 ︰ 按所有者获取 DCN",
  "Telemetry : Custom Query": "遥测：自定义查询",
  "Telemetry : Available Signals": "远程: 可用信号",
  "Telemetry : Signals": "远程: 信号",
  "Telemetry : Daily Avg Speed": "远程︰ 每日平均速度",
  "Telemetry: Events": "Telemetry：事件",
  "Telemetry : Max Speed": "电话： 最大速度",
  "Telemetry : VIN VC Latest": "遥测：最新的 VIN VC",
  "Vehicle Events: List Webhooks": "车辆事件：列出Webhooks",
  "Vehicle Events: Create/Update Webhook (Numeric)": "车辆事件：创建/更新 Webhook (数字)",
  "Vehicle Events: Create/Update Webhook (Boolean)": "车辆事件：创建/更新 Webhook (Boolean)",
  "Vehicle Events: Delete Webhook": "车辆事件：删除 Webhook",
  "Vehicle Events: List Signals": "车辆事件：列出信号",
  "Vehicle Events: List Subscribed Vehicles": "车辆事件：列出订阅的车辆",
  "Vehicle Events: List Vehicle Subscriptions": "车辆事件：列出车辆订阅",
  "Vehicle Events: Subscribe Vehicle": "车辆事件：订阅车辆",
  "Vehicle Events: Subscribe All Vehicles": "车辆事件：订阅所有车辆",
  "Vehicle Events: Unsubscribe Vehicle": "车辆事件：取消订阅车",
  "Vehicle Events: Unsubscribe All Vehicles": "车辆事件：取消订阅所有车辆",
  "Generates the VIN VC for a given vehicle.": "为给定的车辆生成 VIN VC。",
  "Submits a decoding request for vehicle identification number, returns the device definition ID corresponding to the VIN.": "提交车辆识别号码的解码请求，返回与VIN对应的设备定义 ID。",
  "Search for device definitions by query and filters.": "通过查询和过滤器搜索设备定义。",
  "Creates a token exchange to obtain a Vehicle JWT.": "创建一个令牌交易所来获取一个车辆JWT。",
  "Custom Identity Query.": "自定义身份查询。",
  "Get total vehicle count.": "获取车辆总数。",
  "Get developer license info by tokenId.": "通过 tokenId 获取开发者许可证信息",
  "Get vehicles by developer license 0x address.": "通过开发者许可证0x地址获取车辆。",
  "Get total vehicle count for an owner.": "获取所有者的车辆总数。",
  "Get vehicle MMY by owner address.": "通过所有者地址获取车辆MMY。",
  "Get vehicle MMY by tokenId.": "通过 tokenId 获取载具。",
  "Get SACD for a vehicle by tokenId.": "使用 tokenId 获取汽车SACD",
  "Get rewards by owner address.": "通过所有者地址获得奖励。",
  "Get reward history by owner address.": "通过所有者地址获取奖励历史记录。",
  "Get device definition by vehicle tokenId.": "通过车辆令牌获取设备定义。",
  "Get device definition by definitionId.": "通过定义ID获取设备定义。",
  "Get vehicles owned by an address.": "获取地址所拥有的车辆。",
  "Get vehicles shared with a developer license from an owner.": "从所有者获取与开发者许可证共享的车辆。",
  "Get DCNs by owner address.": "通过所有者地址获取 DCN。",
  "Query DIMO Telemetry API using a custom GraphQL query.": "使用自定义的 GraphQL 查询查询 DIMO 远程API。",
  "Get a list of available signals for a specific vehicle.": "获取特定车辆的可用信号列表。",
  "Get a selection of available signals for a specific vehicle.": "获取特定车辆的可用信号。",
  "Get the average speed of a vehicle over a specific time period.": "在特定时间段内获得车辆的平均速度。",
  "Get the vehicle events over a specific time period.": "在特定时间段内获取车辆事件。",
  "Get the maximum speed of a vehicle over a specific time period.": "在特定时间段内获得车辆的最大速度。",
  "Get the latest VIN and Vehicle Configuration for a specific vehicle.": "获取特定车辆的最新VIN和车辆配置。",
  "List all webhooks.": "列出所有网络钩子。",
  "Create a new webhook or update existing one for numeric vehicle signals. If Webhook ID is provided, it will update; otherwise, it will create a new webhook.": "为数字车辆信号创建一个新的网络钩子或更新现有的网络钩子。 如果提供 Webhook ID，它将更新；否则它将创建一个新的Webhook。",
  "Create a new webhook or update existing one for boolean vehicle signals. If Webhook ID is provided, it will update; otherwise, it will create a new webhook.": "为布尔型车辆信号创建一个新的网络钩子或更新现有的网络钩子。 如果提供 Webhook ID，它将更新；否则它将创建一个新的Webhook。",
  "Delete a webhook.": "删除一个网络钩子。",
  "List all signals.": "列出所有信号。",
  "List vehicles subscribed to a webhook.": "列出订阅网络钩子的车辆。",
  "List all subscriptions for a vehicle.": "列出车辆的所有订阅。",
  "Subscribe a vehicle to a webhook.": "订阅一辆车到 webhook。",
  "Subscribe all vehicles to a webhook.": "订阅所有车辆到网络钩子。",
  "Unsubscribe a vehicle from a webhook.": "取消订阅网络钩子中的车辆。",
  "Unsubscribe all vehicles from a webhook.": "取消订阅网络钩子中的所有车辆。",
  "Vehicle Token ID": "车辆代币 ID",
  "Country Code": "国家代码",
  "VIN": "VIN",
  "Query": "查询",
  "Vehicle Make": "车辆制造商",
  "Vehicle Model": "车辆模型",
  "Vehicle Year": "车辆年份",
  "Page": "页",
  "Page Size": "页面大小",
  "Custom GraphQL Query": "自定义图形QL查询",
  "Variables": "变量",
  "Developer License Token ID": "开发者许可证代币 ID",
  "Dev License 0x": "开发许可证 0x",
  "Owner Address": "所有者地址",
  "Device Definition ID": "设备定义 ID",
  "Custom GraphQL Query.": "自定义图形QL查询。",
  "Vehicle Token ID.": "车辆代币ID。",
  "Start Date": "开始日期",
  "End Date": "结束日期",
  "Interval": "间隔",
  "Webhook ID (Optional)": "Webhook ID(可选)",
  "Signal/Data": "信号/数据",
  "Comparison Type": "比较类型",
  "Trigger Value": "触发器值",
  "Trigger Frequency": "触发频率",
  "Target URI": "Target URI",
  "Status": "状态",
  "Verification Token": "验证令牌",
  "Description": "描述",
  "Operator": "运算符",
  "Webhook ID": "Webhook ID",
  "The ID of the vehicle for generating VIN Verifiable Credential for.": "生成VIN可验证凭据的车辆ID。",
  "3-letter ISO 3166-1 alpha-3 country code (e.g. USA)": "3个字母 ISO 3166-1 alpha-3 国家代码 (例如美国)",
  "Vehicle Identification Number.": "车辆识别号码。",
  "Query filter (e.g. Lexus gx 2023)": "查询过滤器 (例如Lexus gx 2023)",
  "Make of the vehicle (e.g. audi, lexus, etc)": "车辆制作(例如audio、lexus等)",
  "Model of the vehicle (e.g. Tacoma, Accord, etc)": "车辆型号(例如Tacoma、 Agreement等)",
  "Year of the vehicle (e.g. 2024)": "车辆年份(如2024年)",
  "Page number (for pagination, defaults to 1)": "页码 (用于分页，默认为1)",
  "Page size (items per page)": "页面大小 (每页项目)",
  "The ID of the vehicle for getting Vehicle JWT.": "拿到JWT车辆的车辆ID。",
  "Token ID of the developer license.": "开发者许可证的 Token ID。",
  "0x address for developer license.": "开发者许可证的 0x 地址。",
  "0x Ethereum address of the owner.": "所有者的0x 以太坊地址。",
  "The ERC-721 token ID of the vehicle.": "车辆的ERC-721令牌ID。",
  "The ERC-721 token ID of the vehicle": "车辆的 ERC-721 令牌 ID",
  "ID of the device definition.": "设备定义的 ID。",
  "0x Ethereum address of the owner": "所有者的0x 以太坊地址",
  "0x address for developer license": "开发者许可证的 0x 地址",
  "Start date for the query in UTC, formatted as 2025-07-07T12:00:00Z": "查询的开始日期以 UTC 格式，格式为 2025-07-07T12:00:00Z",
  "End date for the query in UTC, formatted as 2025-07-09T12:00:00Z": "查询结束日期 UTC 格式为 2025-07-09T12:00:00Z",
  "Interval (e.g. 1s, 1m, 1h).": "间隔(例如1秒, 1米, 1小时)。",
  "ID of the webhook to update. Leave empty to create a new webhook.": "要更新的 web 钩子的 ID。留空以创建一个新的 web钩子。",
  "Which numeric vehicle signal to monitor": "要监视的数字车辆信号",
  "How to compare the battery power in watts": "如何比较电池电量（瓦片）",
  "Numeric value to compare against (e.g., speed in km/h, fuel percentage, battery watts, tire pressure in PSI)": "要比较的数字值(例如以公里/小时为单位的速度、燃料百分比、电池瓦、PSI中的轮胎压力)",
  "How often the webhook should fire when condition is met": "当满足条件时，webhook 应多长时间开火次数",
  "Webhook endpoint to send events to": "Webhook 端点发送事件到",
  "Webhook status": "Webhook 状态",
  "Token for webhook verification.": "webhook 验证令牌。",
  "Webhook description (optional)": "Webhook 描述(可选)",
  "Which boolean vehicle signal to monitor": "要监视哪个布尔型车辆信号",
  "Comparison operator": "比较运算符",
  "Boolean value to compare against (checked = true/charging, unchecked = false/not charging)": "要比较的布尔值 (check= true/charging, uncheck= false/not charging)",
  "ID of the webhook.": "Web 钩子的 ID。",
  "Token ID of the vehicle.": "车辆的代币ID。",
  "Speed": "速度",
  "Travelled Distance": "旅行距离",
  "Fuel Level (Relative)": "燃料等级(相对)",
  "Fuel Level (Absolute)": "燃料等级(绝对)",
  "Battery Power": "电池功率",
  "Battery State of Charge": "电池充电状态",
  "Tire Pressure (Front Left)": "轮胎压力(左侧)",
  "Tire Pressure (Front Right)": "轮胎压力(右侧)",
  "Tire Pressure (Rear Left)": "轮胎压力(左侧)",
  "Tire Pressure (Rear Right)": "轮胎压力(右后方)",
  "Less than": "小于",
  "Less than or equal to": "小于等于",
  "Equal to": "等于",
  "Greater than or equal to": "大于或等于",
  "Greater than": "大于",
  "Real-time (continuous)": "实际时间（续）",
  "Hourly": "每小时",
  "Active": "已启用",
  "Inactive": "未激活",
  "Battery Charging Status": "电池充电状态",
  "Ignition Status": "点火状态",
  "Is": "是",
  "Battery is Charging Trigger": "电池正在充电触发器",
  "Battery Current Power Trigger": "电池电源触发器",
  "Charge Level Trigger": "电量触发器",
  "Fuel System Absolute Level Trigger": "燃料系统绝对等级触发器",
  "Fuel System Relative Level Trigger": "燃料系统相对等级触发器",
  "Ignition Status Trigger": "点火状态触发",
  "Odometer Trigger": "Odometer 触发器",
  "Speed Trigger": "速度触发器",
  "Tire Pressure Trigger": "轮胎压力触发器",
  "Triggers when vehicle battery charging status changes (True/False).": "当车辆电池充电状态改变时触发 (True/False)。",
  "Triggers when vehicle battery current power meets the specified condition.": "当车辆电池电流电量符合指定条件时触发电量。",
  "Triggers when vehicle battery charge level meets the specified condition.": "当车辆电池电量达到特定条件时，触发器。",
  "Triggers when vehicle fuel system absolute level meets the specified condition.": "当车辆燃料系统的绝对水平符合特定条件时引爆。",
  "Triggers when vehicle fuel system relative level meets the specified condition.": "当车辆燃料系统的相对水平符合特定条件时引爆。",
  "Triggers when vehicle ignition status changes (ON/OFF).": "车辆点火状态发生变化时触发器 (ON/OFF)。",
  "Triggers when vehicle odometer meets the specified condition.": "当车辆奇数器符合特定条件时，触发器。",
  "Triggers when vehicle speed meets specified conditions.": "当车辆速度符合特定条件时触发。",
  "Triggers when vehicle tire pressure meets the specified condition.": "当车辆轮胎压力符合特定条件时触发。",
  "Vehicle Token IDs": "车辆代币 ID",
  "Charging State": "充电状态",
  "Battery Power (Watts)": "电池电源(瓦特)",
  "Charge Percentage (%)": "充电百分比 (%)",
  "Fuel Level (Liters)": "燃料等级 (机)",
  "Fuel Percentage (%)": "燃料百分比 (%)",
  "Ignition State": "点火状态",
  "Odometer Value (km)": "Odometer 值 (km)",
  "Speed Value (km/h)": "速度值 (km/h)",
  "Tire Position": "轮胎位置",
  "Tire Pressure (kPa)": "Tire Pressure (kPa)",
  "List of vehicle token IDs to monitor (leave empty to monitor all vehicles with permissions).": "要监测的车辆标记ID列表(留空以监测所有有许可的车辆)。",
  "Trigger when battery starts or stops charging": "电量开始或停止充电时触发",
  "The battery power in watts to compare against.": "电表中的电池电量与之比较。",
  "How often the webhook should fire when condition is met.": "当满足条件时，Web 钩子应多长时间开火。",
  "The battery charge level percentage (0-100%) to compare against.": "电池充电百分比(0-100%) 与之比较。",
  "The fuel level in liters to compare against.": "与公升燃料水平进行比较。",
  "List of vehicle token IDs to monitor (leave empty or select All Vehicles to monitor all vehicles with permissions).": "要监视的车辆标记ID列表(留空或选择所有车辆以监视所有有许可的车辆)。",
  "The fuel level percentage (0-100%) to compare against.": "与燃料水平的百分比（0-100%）比较。",
  "Trigger when ignition turns ON or OFF.": "点火开启或关闭时触发器。",
  "The odometer value in kilometers to compare against.": "以千米为单位的odometer数值。",
  "Speed value to compare against in kilometers per hour": "以千米为单位比较的速度值",
  "Which tire position to monitor": "哪个轮胎位置需要监测",
  "The tire pressure in kilopascals to compare against": "千帕斯卡的轮胎压力与之比较",
  "True (battery is charging)": "真(电池正在充电)",
  "False (battery is not charging)": "错误(没有充电)",
  "Real-time": "实际时间",
  "ON (ignition turned on)": "开启(点火开启)",
  "OFF (ignition turned off)": "关闭(点火已关闭)",
  "Front Left": "左前",
  "Front Right": "右前",
  "Rear Left": "左后",
  "Rear Right": "右后"
}