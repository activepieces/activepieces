{
  "Make any action on your qdrant vector database": "Make any action on your qdrant vector database",
  "Server Address": "Server Address",
  "API KEY": "API KEY",
  "The url of the Qdrant instance.": "The url of the Qdrant instance.",
  "Enter the API Key of your Qdrant account": "Enter the API Key of your Qdrant account",
  "\n### Using Qdrant cloud\n1. Connect to your [Qdrant cloud account](https://cloud.qdrant.io)\n2. Create a new cluster if it's the first time you  use Qdrant\n3. Go to Data Access Control and create a new api key and copy it\n4. Go to clusters, click on the arrow `>` and copy the Cluster URL.\n\n### Using self-hosted Qdrant\nTry to create your own qdrant instance using the [documentation guides](https://qdrant.tech/documentation/guides/)\n": "\n### Using Qdrant cloud\n1. Connect to your [Qdrant cloud account](https://cloud.qdrant.io)\n2. Create a new cluster if it's the first time you  use Qdrant\n3. Go to Data Access Control and create a new api key and copy it\n4. Go to clusters, click on the arrow `>` and copy the Cluster URL.\n\n### Using self-hosted Qdrant\nTry to create your own qdrant instance using the [documentation guides](https://qdrant.tech/documentation/guides/)\n",
  "Add points to collection": "Add points to collection",
  "Get Collection List": "Get Collection List",
  "Get Collection Infos": "Get Collection Infos",
  "Delete Collection": "Delete Collection",
  "Delete Points": "Delete Points",
  "Get Points": "Get Points",
  "Search Points": "Search Points",
  "Insert a point (= embedding or vector + other infos) to a specific collection, if the collection does not exist it will be created": "Insert a point (= embedding or vector + other infos) to a specific collection, if the collection does not exist it will be created",
  "Get the list of all the collections of your database": "Get the list of all the collections of your database",
  "Get the all the infos of a specific collection": "Get the all the infos of a specific collection",
  "Delete a collection of your database": "Delete a collection of your database",
  "Delete points of a specific collection": "Delete points of a specific collection",
  "Get the points of a specific collection": "Get the points of a specific collection",
  "Search for points closest to your given vector (= embedding)": "Search for points closest to your given vector (= embedding)",
  "Collection Name": "Collection Name",
  "Embeddings": "Embeddings",
  "Embeddings Ids": "Embeddings Ids",
  "Calculation Method of distance": "Calculation Method of distance",
  "Additional Payload": "Additional Payload",
  "Storage": "存储",
  "Choose Points By": "Choose Points By",
  "By ids or filtering": "By ids or filtering",
  "Embedding": "Embedding",
  "Must Have": "Must Have",
  "Must Not Have": "Must Not Have",
  "Negative Vector": "Negative Vector",
  "Limit Result": "Limit Result",
  "The name of the collection needed for this action": "The name of the collection needed for this action",
  "Embeddings (= vectors) for the points": "Embeddings (= vectors) for the points",
  "The ids of the embeddings for the points. If not provided, the ids will be generated automatically": "The ids of the embeddings for the points. If not provided, the ids will be generated automatically",
  "The calculation method helps to rank vectors when you want to find the closest points, the method to use depends on the model who's created the embeddings, see the documentation of your model": "The calculation method helps to rank vectors when you want to find the closest points, the method to use depends on the model who's created the embeddings, see the documentation of your model",
  "Please follow [payload documentation](https://qdrant.tech/documentation/concepts/payload/) to add additional information to the points.": "Please follow [payload documentation](https://qdrant.tech/documentation/concepts/payload/) to add additional information to the points.",
  "Define where points will be stored": "Define where points will be stored",
  "The method to use to get the points": "The method to use to get the points",
  "The infos to select points": "The infos to select points",
  "The vector (= embedding) you want to search for.": "The vector (= embedding) you want to search for.",
  "If the point have this property in his payload it will be selected": "If the point have this property in his payload it will be selected",
  "If the point have this property in his payload it will not be selected": "If the point have this property in his payload it will not be selected",
  "The vector (= embedding) you want to be the farthest.": "The vector (= embedding) you want to be the farthest.",
  "The max number of results you want to get.": "The max number of results you want to get.",
  "Cosine": "Cosine",
  "Euclidean": "Euclidean",
  "Dot": "Dot",
  "on Disk": "on Disk",
  "On Memory": "On Memory",
  "Ids": "Ids",
  "Filtering": "Filtering"
}