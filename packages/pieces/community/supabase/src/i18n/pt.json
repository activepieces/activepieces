{
  "Supabase": "Supabase",
  "The open-source Firebase alternative": "A alternativa open-source Firebase",
  "Project URL": "Project URL",
  "API Key": "Chave de API",
  "Your Supabase project URL (e.g., https://your-project-ref.supabase.co)": "Your Supabase project URL (e.g., https://your-project-ref.supabase.co)",
  "Service Role Key (for actions) or Anonymous Key (for basic triggers)": "Service Role Key (for actions) or Anonymous Key (for basic triggers)",
  "\n## Supabase Connection Setup\n\n### 1. Get Your Project URL\n- Go to your [Supabase Dashboard](https://supabase.com/dashboard)\n- Select your project\n- Go to **Settings** → **API**\n- Copy the **Project URL** (format: `https://your-project-ref.supabase.co`)\n\n### 2. Get Your API Key\nChoose the appropriate key based on your use case:\n\n**For Actions (Database Operations):**\n- Use **Service Role Key** (secret) for server-side operations\n- Has full access to bypass Row Level Security (RLS)\n\n**For Triggers (Webhooks)": "\n## Supabase Connection Setup\n\n### 1. Get Your Project URL\n- Go to your [Supabase Dashboard](https://supabase.com/dashboard)\n- Select your project\n- Go to **Settings** → **API**\n- Copy the **Project URL** (format: `https://your-project-ref.supabase.co`)\n\n### 2. Get Your API Key\nChoose the appropriate key based on your use case:\n\n**For Actions (Database Operations):**\n- Use **Service Role Key** (secret) for server-side operations\n- Has full access to bypass Row Level Security (RLS)\n\n**For Triggers (Webhooks):**\n- Use **Anonymous Key** (public) if your webhooks don't need elevated permissions\n- Use **Service Role Key** for elevated permissions\n\n**Security Note:** Keep your Service Role Key secret - it bypasses all RLS policies.\n\nFind your keys in **Settings** → **API** → **Project API keys**\n",
  "Upload File": "Enviar Arquivo",
  "Create Row": "Criar Linha",
  "Update Row": "Atualizar linha",
  "Upsert Row": "Linha Recorrente",
  "Delete Rows": "Delete Rows",
  "Search Rows": "Search Rows",
  "Custom API Call": "Chamada de API personalizada",
  "Upload a file to Supabase Storage": "Enviar um arquivo para suavizar o armazenamento",
  "Create a new row in a table": "Create a new row in a table",
  "Update rows in a table based on filter criteria": "Update rows in a table based on filter criteria",
  "Insert or update a row in a table": "Insert or update a row in a table",
  "Remove rows matching filter criteria from a table": "Remove rows matching filter criteria from a table",
  "Search for rows in a table with filters and pagination": "Search for rows in a table with filters and pagination",
  "Make a custom API call to a specific endpoint": "Faça uma chamada de API personalizada para um ponto de extremidade específico",
  "File path": "Caminho do arquivo",
  "Bucket": "Balde",
  "Base64 or URL": "URL ou Base64",
  "Table Name": "Nome da Tabela",
  "Row Data": "Dados da Linha",
  "Return Created Row": "Return Created Row",
  "Filter Type": "Filter Type",
  "Filter Column": "Filter Column",
  "Filter Value": "Filter Value",
  "Filter Values": "Filter Values",
  "Update Data": "Update Data",
  "Count Updated Rows": "Count Updated Rows",
  "Return Updated Rows": "Return Updated Rows",
  "Conflict Column": "Conflict Column",
  "Count Upserted Rows": "Count Upserted Rows",
  "Return Upserted Rows": "Return Upserted Rows",
  "Count Deleted Rows": "Count Deleted Rows",
  "Return Deleted Rows": "Return Deleted Rows",
  "Columns": "Colunas",
  "Filters": "Filtros",
  "Page": "Página",
  "Page Size": "Tamanho da página",
  "Count Algorithm": "Count Algorithm",
  "Method": "Método",
  "Headers": "Cabeçalhos",
  "Query Parameters": "Parâmetros da consulta",
  "Body": "Conteúdo",
  "Response is Binary ?": "A resposta é binária ?",
  "No Error on Failure": "Nenhum erro no Failure",
  "Timeout (in seconds)": "Tempo limite (em segundos)",
  "Select a table from your database": "Select a table from your database",
  "Enter the data for each column": "Enter the data for each column",
  "Whether to return the created row": "Whether to return the created row",
  "How to identify rows to update": "How to identify rows to update",
  "Select the column to filter on": "Selecione a coluna para filtrar",
  "The value to match against (not used for \"in list\" filter)": "O valor a corresponder (não é usado para o filtro \"na lista\")",
  "List of values for \"in list\" filter type": "Lista de valores para o tipo de filtro \"na lista\"",
  "Select which columns to update (auto-generated fields excluded)": "Seleciona quais colunas atualizar (campos gerados automaticamente excluídos)",
  "Whether to count the number of updated rows": "Se deseja contar o número de linhas atualizadas",
  "Whether to return the updated rows data": "Se deseja devolver os dados atualizados das linhas",
  "Select the unique column to determine duplicates (required for upsert to work)": "Selecione a coluna exclusiva para determinar as duplicatas (necessário para que o upsert funcione)",
  "Enter data for the row (conflict detection handled separately)": "Digite os dados da linha (detecção de conflitos processada separadamente)",
  "Whether to count the number of upserted rows": "Se deseja contar o número de linhas upseradas",
  "Whether to return the upserted rows data": "Se retorna os dados das linhas upserted",
  "How to filter rows for deletion": "Como filtrar linhas para exclusão",
  "The value to match against (not used for null checks)": "O valor a ser igual (não é usado para verificações nulas)",
  "List of values for \"in\" filter type": "Lista de valores para o tipo de filtro \"in\"",
  "Whether to count the number of deleted rows": "Se deseja contar o número de linhas excluídas",
  "Whether to return the deleted rows data": "Se deseja devolver os dados das linhas excluídas",
  "Columns to return (comma-separated). Leave empty to return all columns.": "Colunas para retornar (separadas por vírgula). Deixe em branco para retornar todas as colunas.",
  "List of filters to apply": "Lista de filtros a aplicar",
  "Page number for pagination (starts from 1)": "Número da página para paginação (começa de 1)",
  "Number of records per page (max 1000)": "Número de registros por página (máx. 1000)",
  "Algorithm to use for counting rows": "Algoritmo utilizado para contagem de linhas",
  "Authorization headers are injected automatically from your connection.": "Os cabeçalhos de autorização são inseridos automaticamente a partir da sua conexão.",
  "Enable for files like PDFs, images, etc..": "Habilitar para arquivos como PDFs, imagens, etc..",
  "Column equals value": "Coluna igual a valor",
  "Column is in list of values": "A coluna está na lista de valores",
  "Column is greater than value": "A coluna é maior que o valor",
  "Column not equals value": "Coluna não é igual ao valor",
  "Column is in list": "A coluna está na lista",
  "Column is greater than": "A coluna é maior que",
  "Column is greater than or equal": "A coluna é maior ou igual",
  "Column is less than": "A coluna é menor que",
  "Column is less than or equal": "A coluna é menor ou igual",
  "Column is null": "Coluna é nula",
  "Column is not null": "A coluna não é nula",
  "Column matches pattern (LIKE)": "Correspondência de coluna padrão (LIKE)",
  "Column matches pattern (case-insensitive)": "Padrão de correspondências de coluna (maiúsculas e minúsculas)",
  "Exact": "Exato",
  "Planned": "Planejado",
  "Estimated": "Estimado",
  "GET": "OBTER",
  "POST": "POSTAR",
  "PATCH": "COMPRAR",
  "PUT": "COLOCAR",
  "DELETE": "EXCLUIR",
  "HEAD": "CABEÇA",
  "New Row": "Nova linha",
  "Fires when a new row is created in a table": "Atira quando uma nova linha é criada em uma tabela",
  "Markdown": "Markdown",
  "Schema": "Esquema",
  "## Setup Instructions\n\n1. **Go to your Supabase Dashboard** → Database → Webhooks\n2. **Click \"Create a new hook\"**\n3. **Configure the webhook:**\n   - **Name**: Give it a descriptive name (e.g., \"Activepieces New Row\")\n   - **Table**: Select the table you want to monitor\n   - **Events**: Check \"Insert\" \n   - **Type**: HTTP Request\n   - **Method**: POST\n   - **URL**: Copy and paste the webhook URL below\n4. **Click \"Create webhook\"**\n\n**Webhook URL:** `{{webhookUrl}}`\n\n## Important Notes\n- The webhook will sen": "## Instruções de configuração\n\n1. **Vá para seu painel de suporte** → Banco de dados → Webhooks\n\n. **Clique em \"Create a new hook\"**\n3. **Configure o webhook:**\n   - **Nome**: Dê um nome descritivo (por exemplo, \"Activepieces New Row\")\n   - **Tabela**: Selecione a tabela que você quer monitorar\n   - **Eventos**: Verifique \"Insert\" \n   - **Tipo**: HTTP Request\n   - **Método**: POST\n   - **URL**: copie e cole o URL do webhook abaixo\n4. **Clique em \"Create webhook\"**\n\n**Webhook URL:** `{{webhookUrl}}` \n\n ## Notas Importantes\n- O webhook vai enviar uma carga JSON com os novos dados de linha\n- Certifique-se de que sua tabela tem as permissões necessárias\n- Você pode testar o webhook inserindo uma nova linha na sua tabela\n\nPara mais detalhes veja [Supabase Database Webhooks documentation](https://supabase.com/docs/guides/database/webhooks).",
  "Database schema (default: public)": "Esquema do banco de dados (padrão: público)"
}