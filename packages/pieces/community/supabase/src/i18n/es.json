{
  "Supabase": "Supabase",
  "The open-source Firebase alternative": "La alternativa de Firebase de código abierto",
  "Project URL": "Project URL",
  "API Key": "Clave API",
  "Your Supabase project URL (e.g., https://your-project-ref.supabase.co)": "Your Supabase project URL (e.g., https://your-project-ref.supabase.co)",
  "Service Role Key (for actions) or Anonymous Key (for basic triggers)": "Service Role Key (for actions) or Anonymous Key (for basic triggers)",
  "\n## Supabase Connection Setup\n\n### 1. Get Your Project URL\n- Go to your [Supabase Dashboard](https://supabase.com/dashboard)\n- Select your project\n- Go to **Settings** → **API**\n- Copy the **Project URL** (format: `https://your-project-ref.supabase.co`)\n\n### 2. Get Your API Key\nChoose the appropriate key based on your use case:\n\n**For Actions (Database Operations):**\n- Use **Service Role Key** (secret) for server-side operations\n- Has full access to bypass Row Level Security (RLS)\n\n**For Triggers (Webhooks)": "\n## Supabase Connection Setup\n\n### 1. Get Your Project URL\n- Go to your [Supabase Dashboard](https://supabase.com/dashboard)\n- Select your project\n- Go to **Settings** → **API**\n- Copy the **Project URL** (format: `https://your-project-ref.supabase.co`)\n\n### 2. Get Your API Key\nChoose the appropriate key based on your use case:\n\n**For Actions (Database Operations):**\n- Use **Service Role Key** (secret) for server-side operations\n- Has full access to bypass Row Level Security (RLS)\n\n**For Triggers (Webhooks):**\n- Use **Anonymous Key** (public) if your webhooks don't need elevated permissions\n- Use **Service Role Key** for elevated permissions\n\n**Security Note:** Keep your Service Role Key secret - it bypasses all RLS policies.\n\nFind your keys in **Settings** → **API** → **Project API keys**\n",
  "Upload File": "Subir archivo",
  "Create Row": "Crear fila",
  "Update Row": "Actualizar fila",
  "Upsert Row": "Subir fila",
  "Delete Rows": "Delete Rows",
  "Search Rows": "Search Rows",
  "Custom API Call": "Llamada API personalizada",
  "Upload a file to Supabase Storage": "Subir un archivo a Supabase Storage",
  "Create a new row in a table": "Create a new row in a table",
  "Update rows in a table based on filter criteria": "Update rows in a table based on filter criteria",
  "Insert or update a row in a table": "Insert or update a row in a table",
  "Remove rows matching filter criteria from a table": "Remove rows matching filter criteria from a table",
  "Search for rows in a table with filters and pagination": "Search for rows in a table with filters and pagination",
  "Make a custom API call to a specific endpoint": "Hacer una llamada API personalizada a un extremo específico",
  "File path": "Ruta del archivo",
  "Bucket": "Cubo",
  "Base64 or URL": "Base64 o URL",
  "Table Name": "Nombre de tabla",
  "Row Data": "Datos de fila",
  "Return Created Row": "Return Created Row",
  "Filter Type": "Filter Type",
  "Filter Column": "Filter Column",
  "Filter Value": "Filter Value",
  "Filter Values": "Filter Values",
  "Update Data": "Update Data",
  "Count Updated Rows": "Count Updated Rows",
  "Return Updated Rows": "Return Updated Rows",
  "Conflict Column": "Conflict Column",
  "Count Upserted Rows": "Count Upserted Rows",
  "Return Upserted Rows": "Return Upserted Rows",
  "Count Deleted Rows": "Count Deleted Rows",
  "Return Deleted Rows": "Return Deleted Rows",
  "Columns": "Columnas",
  "Filters": "Filtros",
  "Page": "Pgina",
  "Page Size": "Tamaño de página",
  "Count Algorithm": "Count Algorithm",
  "Method": "Método",
  "Headers": "Encabezados",
  "Query Parameters": "Parámetros de consulta",
  "Body": "Cuerpo",
  "Response is Binary ?": "¿Respuesta es binaria?",
  "No Error on Failure": "No hay ningún error en fallo",
  "Timeout (in seconds)": "Tiempo de espera (en segundos)",
  "Select a table from your database": "Select a table from your database",
  "Enter the data for each column": "Enter the data for each column",
  "Whether to return the created row": "Whether to return the created row",
  "How to identify rows to update": "How to identify rows to update",
  "Select the column to filter on": "Select the column to filter on",
  "The value to match against (not used for \"in list\" filter)": "The value to match against (not used for \"in list\" filter)",
  "List of values for \"in list\" filter type": "List of values for \"in list\" filter type",
  "Select which columns to update (auto-generated fields excluded)": "Select which columns to update (auto-generated fields excluded)",
  "Whether to count the number of updated rows": "Whether to count the number of updated rows",
  "Whether to return the updated rows data": "Whether to return the updated rows data",
  "Select the unique column to determine duplicates (required for upsert to work)": "Select the unique column to determine duplicates (required for upsert to work)",
  "Enter data for the row (conflict detection handled separately)": "Enter data for the row (conflict detection handled separately)",
  "Whether to count the number of upserted rows": "Whether to count the number of upserted rows",
  "Whether to return the upserted rows data": "Whether to return the upserted rows data",
  "How to filter rows for deletion": "How to filter rows for deletion",
  "The value to match against (not used for null checks)": "The value to match against (not used for null checks)",
  "List of values for \"in\" filter type": "List of values for \"in\" filter type",
  "Whether to count the number of deleted rows": "Whether to count the number of deleted rows",
  "Whether to return the deleted rows data": "Whether to return the deleted rows data",
  "Columns to return (comma-separated). Leave empty to return all columns.": "Columns to return (comma-separated). Leave empty to return all columns.",
  "List of filters to apply": "List of filters to apply",
  "Page number for pagination (starts from 1)": "Page number for pagination (starts from 1)",
  "Number of records per page (max 1000)": "Number of records per page (max 1000)",
  "Algorithm to use for counting rows": "Algorithm to use for counting rows",
  "Authorization headers are injected automatically from your connection.": "Las cabeceras de autorización se inyectan automáticamente desde tu conexión.",
  "Enable for files like PDFs, images, etc..": "Activar para archivos como PDFs, imágenes, etc.",
  "Column equals value": "Column equals value",
  "Column is in list of values": "Column is in list of values",
  "Column is greater than value": "Column is greater than value",
  "Column not equals value": "Column not equals value",
  "Column is in list": "Column is in list",
  "Column is greater than": "Column is greater than",
  "Column is greater than or equal": "Column is greater than or equal",
  "Column is less than": "Column is less than",
  "Column is less than or equal": "Column is less than or equal",
  "Column is null": "Column is null",
  "Column is not null": "Column is not null",
  "Column matches pattern (LIKE)": "Column matches pattern (LIKE)",
  "Column matches pattern (case-insensitive)": "La columna coincide con el patrón (mayúsculas y minúsculas)",
  "Exact": "Exacto",
  "Planned": "Planeado",
  "Estimated": "Estimado",
  "GET": "RECOGER",
  "POST": "POST",
  "PATCH": "PATCH",
  "PUT": "PUT",
  "DELETE": "BORRAR",
  "HEAD": "LIMPIO",
  "New Row": "Nueva fila",
  "Fires when a new row is created in a table": "Dispara cuando se crea una nueva fila en una tabla",
  "Markdown": "Markdown",
  "Schema": "Esquema",
  "## Setup Instructions\n\n1. **Go to your Supabase Dashboard** → Database → Webhooks\n2. **Click \"Create a new hook\"**\n3. **Configure the webhook:**\n   - **Name**: Give it a descriptive name (e.g., \"Activepieces New Row\")\n   - **Table**: Select the table you want to monitor\n   - **Events**: Check \"Insert\" \n   - **Type**: HTTP Request\n   - **Method**: POST\n   - **URL**: Copy and paste the webhook URL below\n4. **Click \"Create webhook\"**\n\n**Webhook URL:** `{{webhookUrl}}`\n\n## Important Notes\n- The webhook will sen": "## Configurar Instrucciones\n\n1. **Ve a tu Tablero de Suaba** → Base de datos → Webhooks\n\n. **Haz clic en \"Crear un nuevo hook\"**\n3. **Configura el webhook:**\n   - **Nombre**: Dale un nombre descriptivo (p.e. \"Activepieces New Row\")\n   - **Tabla**: Selecciona la tabla que quieres monitorizar\n   - **Eventos**: Comprueba \"Insertar\" \n   - **Tipo**: HTTP Request\n   - **Método**: POST\n   - **URL**: Copia y pega la URL del webhook debajo de\n4. **Haz clic en \"Crear webhook\"**\n\n**Webhook URL:** `{{webhookUrl}}` \n\n ## Notas Importantes\n- El webhook enviará una carga JSON con los nuevos datos de fila\n- Asegúrate de que tu tabla tiene los permisos necesarios\n- Puedes probar el webhook insertando una nueva fila en tu tabla\n\nPara más detalles, vea [Suabase Database Webhooks documentation](https://supabase.com/docs/guides/database/webhooks).",
  "Database schema (default: public)": "Esquema de base de datos (por defecto: público)"
}