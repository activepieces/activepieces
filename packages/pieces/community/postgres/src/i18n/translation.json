{
  "Postgres": "Postgres",
  "The world's most advanced open-source relational database": "The world's most advanced open-source relational database",
  "Host": "Host",
  "Port": "Port",
  "User": "User",
  "Password": "Password",
  "Database": "Database",
  "Enable SSL": "Enable SSL",
  "Verify server certificate": "Verify server certificate",
  "Certificate": "Certificate",
  " A string indicating the hostname of the PostgreSQL server to connect to.": " A string indicating the hostname of the PostgreSQL server to connect to.",
  "An integer indicating the port of the PostgreSQL server to connect to.": "An integer indicating the port of the PostgreSQL server to connect to.",
  "A string indicating the user to authenticate as when connecting to the PostgreSQL server.": "A string indicating the user to authenticate as when connecting to the PostgreSQL server.",
  "A string indicating the password to use for authentication.": "A string indicating the password to use for authentication.",
  "A string indicating the name of the database to connect to.": "A string indicating the name of the database to connect to.",
  "Connect to the postgres database over SSL": "Connect to the postgres database over SSL",
  "Verify the server certificate against trusted CAs or a CA provided in the certificate field below. This will fail if the database server is using a self signed certificate.": "Verify the server certificate against trusted CAs or a CA provided in the certificate field below. This will fail if the database server is using a self signed certificate.",
  "The CA certificate to use for verification of server certificate.": "The CA certificate to use for verification of server certificate.",
  "Run Query": "Run Query",
  "Markdown": "Markdown",
  "Query": "Query",
  "Arguments": "Arguments",
  "Query Timeout": "Query Timeout",
  "Connection Timeout (ms)": "Connection Timeout (ms)",
  "Application Name": "Application Name",
  "\n      **DO NOT** insert dynamic input directly into the query string. Instead, use $1, $2, $3 and add them in args for parameterized queries to prevent **SQL injection.**": "\n      **DO NOT** insert dynamic input directly into the query string. Instead, use $1, $2, $3 and add them in args for parameterized queries to prevent **SQL injection.**",
  "Please use $1, $2, etc. for parameterized queries to avoid SQL injection.": "Please use $1, $2, etc. for parameterized queries to avoid SQL injection.",
  "Arguments to be used in the query": "Arguments to be used in the query",
  "An integer indicating the maximum number of milliseconds to wait for a query to complete before timing out.": "An integer indicating the maximum number of milliseconds to wait for a query to complete before timing out.",
  "An integer indicating the maximum number of milliseconds to wait for a connection to be established before timing out.": "An integer indicating the maximum number of milliseconds to wait for a connection to be established before timing out.",
  "A string indicating the name of the client application connecting to the server.": "A string indicating the name of the client application connecting to the server.",
  "New Row": "New Row",
  "triggered when a new row is added": "triggered when a new row is added",
  "Table name": "Table name",
  "Column to order by": "Column to order by",
  "Order Direction": "Order Direction",
  "**NOTE:** The trigger fetches the latest rows using the provided order by column (newest first), and then will keep polling until the previous last row is reached.": "**NOTE:** The trigger fetches the latest rows using the provided order by column (newest first), and then will keep polling until the previous last row is reached.",
  "Use something like a created timestamp or an auto-incrementing ID.": "Use something like a created timestamp or an auto-incrementing ID.",
  "The direction to sort by such that the newest rows are fetched first.": "The direction to sort by such that the newest rows are fetched first.",
  "Ascending": "Ascending",
  "Descending": "Descending"
}