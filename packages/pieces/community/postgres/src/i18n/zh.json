{
  "Postgres": "Postgres",
  "The world's most advanced open-source relational database": "世界上最先进的开源关系数据库",
  "Host": "主机",
  "Port": "端口",
  "User": "用户",
  "Password": "密码",
  "Database": "数据库",
  "Enable SSL": "启用 SSL",
  "Verify server certificate": "验证服务器证书",
  "Certificate": "证书",
  " A string indicating the hostname of the PostgreSQL server to connect to.": " 显示要连接的 PostgreSQL 服务器主机名的字符串。",
  "An integer indicating the port of the PostgreSQL server to connect to.": "表示要连接的 PostgreSQL 服务器端口的整数。",
  "A string indicating the user to authenticate as when connecting to the PostgreSQL server.": "一个字符串表示用户在连接到 PostgreSQL 服务器时进行身份验证。",
  "A string indicating the password to use for authentication.": "用于身份验证的字符串。",
  "A string indicating the name of the database to connect to.": "显示要连接的数据库名称的字符串。",
  "Connect to the postgres database over SSL": "通过 SSL 连接到 postgres 数据库",
  "Verify the server certificate against trusted CAs or a CA provided in the certificate field below. This will fail if the database server is using a self signed certificate.": "验证服务器证书与以下证书字段中提供的信任的CA或CA。 如果数据库服务器正在使用自签名证书，这将失败。",
  "The CA certificate to use for verification of server certificate.": "用于验证服务器证书的 CA 证书。",
  "Run Query": "运行查询",
  "Markdown": "Markdown",
  "Query": "查询",
  "Arguments": "参数",
  "Query Timeout": "查询超时",
  "Connection Timeout (ms)": "连接超时 (ms)",
  "Application Name": "应用程序名称",
  "\n      **DO NOT** insert dynamic input directly into the query string. Instead, use $1, $2, $3 and add them in args for parameterized queries to prevent **SQL injection.**": "\n      **DO Not** 将动态输入直接输入查询字符串。 反而使用 $1, $2, $3 并将它们添加到参数化查询中，以防止**SQL 注入。**",
  "Please use $1, $2, etc. for parameterized queries to avoid SQL injection.": "请使用 $1, $2 等参数化查询以避免SQL 注入。",
  "Arguments to be used in the query": "要在查询中使用的参数",
  "An integer indicating the maximum number of milliseconds to wait for a query to complete before timing out.": "一个整数表示要等待查询完成的最大毫秒数才能超时。",
  "An integer indicating the maximum number of milliseconds to wait for a connection to be established before timing out.": "一个整数表示在超时之前要等待连接的最大毫秒数。",
  "A string indicating the name of the client application connecting to the server.": "一个字符串表示客户端应用程序连接到服务器的名称。",
  "New Row": "新行",
  "triggered when a new row is added": "当新行被添加时触发",
  "Table name": "表格名称",
  "Column to order by": "列排序方式",
  "Order Direction": "订单方向",
  "**NOTE:** The trigger fetches the latest rows using the provided order by column (newest first), and then will keep polling until the previous last row is reached.": "**注意：** 触发器按列(最新的第一次)，用提供的顺序获取最新的行。 然后继续投票，直到最后一行为止。",
  "Use something like a created timestamp or an auto-incrementing ID.": "使用像创建的时间戳或自动递增ID这样的东西。",
  "The direction to sort by such that the newest rows are fetched first.": "排序的方向是先获取最新的行。",
  "Ascending": "升序",
  "Descending": "降序"
}