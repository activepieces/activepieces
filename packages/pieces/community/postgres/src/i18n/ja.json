{
  "Postgres": "Postgres",
  "The world's most advanced open-source relational database": "世界で最も先進的なオープンソースリレーショナルデータベース",
  "Host": "ホスト",
  "Port": "ポート",
  "User": "ユーザー",
  "Password": "Password",
  "Database": "データベース",
  "Enable SSL": "SSLを有効にする",
  "Verify server certificate": "サーバー証明書を確認する",
  "Certificate": "証明書",
  " A string indicating the hostname of the PostgreSQL server to connect to.": " 接続先のPostgreSQLサーバーのホスト名を示す文字列。",
  "An integer indicating the port of the PostgreSQL server to connect to.": "接続先のPostgreSQLサーバーのポートを示す整数。",
  "A string indicating the user to authenticate as when connecting to the PostgreSQL server.": "PostgreSQLサーバーへの接続時として認証するユーザーを示す文字列。",
  "A string indicating the password to use for authentication.": "認証に使用するパスワードを示す文字列",
  "A string indicating the name of the database to connect to.": "接続するデータベースの名前を示す文字列。",
  "Connect to the postgres database over SSL": "SSLを介してpostgresデータベースに接続します",
  "Verify the server certificate against trusted CAs or a CA provided in the certificate field below. This will fail if the database server is using a self signed certificate.": "以下の証明書フィールドに記載されている CA または認証局に対してサーバー証明書を確認します。 これは、データベースサーバーが自己署名証明書を使用している場合に失敗します。",
  "The CA certificate to use for verification of server certificate.": "サーバー証明書の検証に使用する CA 証明書。",
  "Run Query": "クエリの実行",
  "Markdown": "Markdown",
  "Query": "クエリ",
  "Arguments": "引数",
  "Query Timeout": "クエリのタイムアウト",
  "Connection Timeout (ms)": "接続タイムアウト (ms)",
  "Application Name": "アプリケーション名",
  "\n      **DO NOT** insert dynamic input directly into the query string. Instead, use $1, $2, $3 and add them in args for parameterized queries to prevent **SQL injection.**": "\n      **動的入力を直接クエリ文字列に挿入しない** 。 代わりに、$1、$2、$3を使用して、**SQLインジェクション** を防ぐためにパラメータ化されたクエリのために引数に追加します。",
  "Please use $1, $2, etc. for parameterized queries to avoid SQL injection.": "SQLインジェクションを避けるためにパラメータ化されたクエリには、$1、$2などを使用してください。",
  "Arguments to be used in the query": "クエリで使用する引数",
  "An integer indicating the maximum number of milliseconds to wait for a query to complete before timing out.": "タイムアウト前にクエリが完了するまで待機する最大ミリ秒数を示す整数。",
  "An integer indicating the maximum number of milliseconds to wait for a connection to be established before timing out.": "タイミングアウト前に接続が確立されるまでの最大ミリ秒数を示す整数。",
  "A string indicating the name of the client application connecting to the server.": "サーバーに接続しているクライアント・アプリケーションの名前を示す文字列。",
  "New Row": "新しい行",
  "triggered when a new row is added": "新しい行が追加されたときにトリガーされます。",
  "Table name": "テーブル名",
  "Column to order by": "次の順序の列",
  "Order Direction": "注文の方向",
  "**NOTE:** The trigger fetches the latest rows using the provided order by column (newest first), and then will keep polling until the previous last row is reached.": "**注意:** トリガーは与えられた順序で最新の行を取得します（最新の順序）。 最後の行に達するまでポーリングを続けます。",
  "Use something like a created timestamp or an auto-incrementing ID.": "作成したタイムスタンプや自動インクリメントIDのようなものを使用します。",
  "The direction to sort by such that the newest rows are fetched first.": "最新の行が最初に取得されるように並べ替える方向。",
  "Ascending": "昇順",
  "Descending": "降順"
}