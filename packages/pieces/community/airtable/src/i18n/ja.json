{
  "Low‒code platform to build apps.": "アプリを構築するためのプラットフォームをローコードします。",
  "\n    To obtain your personal token, follow these steps:\n\n    1. Log in to your Airtable account.\n    2. Visit https://airtable.com/create/tokens/ to create one\n    3. Click on \"+ Add a base\" and select the base you want to use or all bases.\n    4. Click on \"+ Add a scope\" and select \"data.records.read\", \"data.records.write\" and \"schema.bases.read\".\n    5. Click on \"Create token\" and copy the token.\n    ": "\n    To obtain your personal token, follow these steps:\n\n    1. Log in to your Airtable account.\n    2. Visit https://airtable.com/create/tokens/ to create one\n    3. Click on \"+ Add a base\" and select the base you want to use or all bases.\n    4. Click on \"+ Add a scope\" and select \"data.records.read\", \"data.records.write\" and \"schema.bases.read\".\n    5. Click on \"Create token\" and copy the token.\n    ",
  "Create Airtable Record": "対応可能な記録を作成",
  "Find Airtable Record": "対空式記録を検索",
  "Update Airtable Record": "対空式記録を更新",
  "Delete Airtable Record": "空気の記録を削除",
  "Upload File to Column": "列にファイルをアップロード",
  "Add Comment to Record": "コメントをレコードに追加",
  "Create Base": "ベースを作成",
  "Create Table": "テーブルを作成",
  "Find Base": "ベースを検索",
  "Find Table by ID": "IDでテーブルを検索",
  "Get Record by ID": "IDでレコードを取得する",
  "Find Table": "テーブルを検索",
  "Get Base Schema": "ベーススキーマの取得",
  "Custom API Call": "カスタムAPI通話",
  "Adds a record into an airtable": "エアーテーブルにレコードを追加",
  "Find a record in airtable": "エアテーブルでレコードを見つける",
  "Update a record in airtable": "エアテーブルのレコードを更新",
  "Deletes a record in airtable": "エアテーブル内のレコードを削除",
  "Uploads a file to attachment type column.": "添付ファイルの種類の列にファイルをアップロードします。",
  "Adds a comment to an existing record.": "既存のレコードにコメントを追加します。",
  "Create a new base with a specified table structure.": "指定されたテーブル構造を持つ新しいベースを作成します。",
  "Create a new table in an existing base.": "既存のベースに新しいテーブルを作成します。",
  "Find a base by its name or a keyword.": "名前またはキーワードでベースを検索します。",
  "Get a table's details and schema using its ID.": "テーブルの ID を使用してテーブルの詳細とスキーマを取得します。",
  "Retrieve a single record from a table by its unique ID.": "一意の ID でテーブルから単一レコードを取得します。",
  "Find a table in a given base by its name.": "指定されたベース名でテーブルを検索します。",
  "Retrieve the schema for a specific base, including all its tables and fields.": "すべてのテーブルとフィールドを含む特定のベースのスキーマを取得します。",
  "Make a custom API call to a specific endpoint": "特定のエンドポイントへのカスタム API コールを実行します。",
  "Base": "Base",
  "Table": "表",
  "Search Field": "検索フィールド",
  "Search Value": "検索値",
  "View": "表示",
  "Record ID": "レコードID",
  "Attachment Column": "添付ファイルの列",
  "File": "ファイル",
  "File Content Type": "ファイルコンテンツタイプ",
  "File Name": "ファイル名",
  "Comment Text": "コメントテキスト",
  "Parent Comment ID": "親コメントID",
  "Workspace": "ワークスペース",
  "Base Name": "ベース名",
  "Tables": "テーブル",
  "Table Name": "テーブル名",
  "Description": "説明",
  "Fields": "フィールド",
  "Base Name or Keyword": "ベース名またはキーワード",
  "Record": "レコード",
  "Method": "方法",
  "Headers": "ヘッダー",
  "Query Parameters": "クエリパラメータ",
  "Body": "本文",
  "Response is Binary ?": "応答はバイナリですか?",
  "No Error on Failure": "失敗時にエラーはありません",
  "Timeout (in seconds)": "タイムアウト（秒）",
  "The ID of the record.": "レコードの ID",
  "The ID of the record to which you want to upload the file.": "ファイルをアップロードするレコードの ID 。",
  "The file to be uploaded, which can be provided either as a public file URL or in Base64 encoded format.": "アップロードするファイルは、公開ファイルの URL または Base64 エンコード形式のいずれかで指定できます。",
  "Specifies the MIME type of the file being uploaded (e.g., 'image/png', 'application/pdf').": "アップロードするファイルの MIME タイプを指定します(例: 'image/png', 'application/pdf')。",
  "The name of the file as it should appear after upload.": "アップロード後にファイル名が表示されます。",
  "The content of the comment. To mention a user, use the format `@[userId]` or `@[userEmail]`.": "コメントの内容。ユーザーに言及するには、`@[userId]` または `@[userEmail] ` 形式を使用します。",
  "Optional. The ID of a parent comment to create a threaded reply.": "オプション。スレッドの返信を作成するための親コメントの ID です。",
  "The name for the new base.": "新しいベースの名前",
  "Define the tables for the new base. Use the default value as a template. The first field for each table will be its primary field.": "新しいベースのテーブルを定義します。テンプレートとしてデフォルト値を使用します。各テーブルの最初のフィールドは、そのプライマリフィールドになります。",
  "The name for the new table.": "新しいテーブルの名前。",
  "An optional description for the new table.": "新しいテーブルのオプション説明。",
  "A JSON array of fields for the new table. The first field in the array will become the primary field.": "新しいテーブルのフィールドの JSON 配列。配列の最初のフィールドはプライマリフィールドになります。",
  "The name or keyword to search for within your base names.": "ベース名内を検索するための名前またはキーワード。",
  "The exact name of the table you want to find.": "見つけたいテーブルの正確な名前。",
  "Authorization headers are injected automatically from your connection.": "認証ヘッダは接続から自動的に注入されます。",
  "Enable for files like PDFs, images, etc..": "PDF、画像などのファイルを有効にします。",
  "GET": "取得",
  "POST": "POST",
  "PATCH": "PATCH",
  "PUT": "PUT",
  "DELETE": "削除",
  "HEAD": "頭",
  "New Record": "新しいレコード",
  "New or Updated Record": "新規または更新されたレコード",
  "Triggers when a new record is added to the selected table.": "選択したテーブルに新しいレコードが追加されたときにトリガーされます。",
  "Triggers when a record is created or updated in selected table.": "選択したテーブルでレコードを作成または更新したときにトリガーします。",
  "Trigger field": "トリガーフィールド",
  "**Last Modified Time** field will be used to watch new or updated records.Please create **Last Modified Time** field in your schema,if you don't have any timestamp field.": "**最終更新時刻** フィールドは、新しいレコードや更新を見るために使用されます。 リース作成**最終更新時刻** あなたのスキーマにタイムスタンプフィールドがなければ、あなたのスキーマにフィールドを作成します。"
}