{
  "Grok by xAI": "Grok by xAI",
  "AI chatbot by xAI that answers questions, generates text, extracts data, and provides real-time insights.": "AI chatbot by xAI that answers questions, generates text, extracts data, and provides real-time insights.",
  "\n**Get your xAI API Key**\n\n1. Sign up at [xAI](https://x.ai)\n2. Go to your [API dashboard](https://console.x.ai)\n3. Generate a new API key\n4. Copy and paste the key here\n\nYour API key should start with `xai-`\n  ": "\n**Get your xAI API Key**\n\n1. Sign up at [xAI](https://x.ai)\n2. Go to your [API dashboard](https://console.x.ai)\n3. Generate a new API key\n4. Copy and paste the key here\n\nYour API key should start with `xai-`\n  ",
  "Ask Grok": "Ask Grok",
  "Extract Data From Text": "Extract Data From Text",
  "Categorize Text": "Categorize Text",
  "Generate Image": "Generate Image",
  "Custom API Call": "自定义 API 呼叫",
  "Send prompts to Grok with real-time search, tools, and structured outputs.": "Send prompts to Grok with real-time search, tools, and structured outputs.",
  "Extract structured data fields from unstructured text (e.g., names, addresses, dates).": "Extract structured data fields from unstructured text (e.g., names, addresses, dates).",
  "Assign categories to input text based on custom or predefined labels.": "Assign categories to input text based on custom or predefined labels.",
  "Create images from text prompts using Grok's image generation.": "Create images from text prompts using Grok's image generation.",
  "Make a custom API call to a specific endpoint": "将一个自定义 API 调用到一个特定的终点",
  "Model": "Model",
  "Messages": "Messages",
  "Quick Prompt (Alternative)": "Quick Prompt (Alternative)",
  "System Instructions": "System Instructions",
  "Image URL (Optional)": "Image URL (Optional)",
  "Temperature": "Temperature",
  "Max Completion Tokens": "Max Completion Tokens",
  "Response Format": "Response Format",
  "JSON Schema": "JSON Schema",
  "Enable Real-Time Search": "Enable Real-Time Search",
  "Search Mode": "Search Mode",
  "Max Search Results": "Max Search Results",
  "Search Sources": "Search Sources",
  "Tools/Functions": "Tools/Functions",
  "Tool Choice": "Tool Choice",
  "Parallel Tool Calls": "Parallel Tool Calls",
  "Reasoning Effort": "Reasoning Effort",
  "Memory Key": "内存键",
  "Text to Extract From": "Text to Extract From",
  "Extraction Instructions": "Extraction Instructions",
  "Fields to Extract": "Fields to Extract",
  "Enable Context Search": "Enable Context Search",
  "Strict Extraction": "Strict Extraction",
  "Include Confidence Scores": "Include Confidence Scores",
  "Text to Categorize": "Text to Categorize",
  "Categories": "Categories",
  "Allow Multiple Categories": "Allow Multiple Categories",
  "Custom Instructions": "Custom Instructions",
  "Image Prompt": "Image Prompt",
  "Image Model": "Image Model",
  "Number of Images": "Number of Images",
  "Method": "方法",
  "Headers": "信头",
  "Query Parameters": "查询参数",
  "Body": "正文内容",
  "Response is Binary ?": "Response is Binary ?",
  "No Error on Failure": "失败时没有错误",
  "Timeout (in seconds)": "超时(秒)",
  "Grok model to use for generating the response.": "Grok model to use for generating the response.",
  "Conversation messages for multi-turn conversations.": "Conversation messages for multi-turn conversations.",
  "Simple text prompt for single-turn conversations. Ignored if Messages is provided.": "Simple text prompt for single-turn conversations. Ignored if Messages is provided.",
  "System message to set behavior and context.": "System message to set behavior and context.",
  "Image URL for vision models. Works with quick prompt mode.": "Image URL for vision models. Works with quick prompt mode.",
  "Controls randomness (0-2): 0 = deterministic, 1 = balanced, 2 = creative.": "Controls randomness (0-2): 0 = deterministic, 1 = balanced, 2 = creative.",
  "Maximum tokens for the response.": "Maximum tokens for the response.",
  "Output format for the response.": "Output format for the response.",
  "JSON schema for structured output (when response format is json_schema).": "JSON schema for structured output (when response format is json_schema).",
  "Allow Grok to search the web and X for current information.": "Allow Grok to search the web and X for current information.",
  "How to handle real-time data search.": "How to handle real-time data search.",
  "Maximum number of search results to use (1-30).": "Maximum number of search results to use (1-30).",
  "Sources to search in.": "Sources to search in.",
  "Functions the model can call.": "Functions the model can call.",
  "How the model should use tools.": "How the model should use tools.",
  "Allow model to call multiple tools simultaneously.": "Allow model to call multiple tools simultaneously.",
  "How hard reasoning models should think (not for grok-4).": "How hard reasoning models should think (not for grok-4).",
  "Keep conversation history across runs.": "Keep conversation history across runs.",
  "Grok model to use for data extraction.": "Grok model to use for data extraction.",
  "Text to extract data from.": "Text to extract data from.",
  "How to extract the data.": "How to extract the data.",
  "Define the structured fields to extract from the text.": "Define the structured fields to extract from the text.",
  "Search for additional context to improve extraction.": "Search for additional context to improve extraction.",
  "Only extract explicitly present information.": "Only extract explicitly present information.",
  "How thoroughly to analyze the text.": "How thoroughly to analyze the text.",
  "Include confidence scores for extracted fields.": "Include confidence scores for extracted fields.",
  "Grok model to use for text categorization.": "Grok model to use for text categorization.",
  "Text content to categorize.": "Text content to categorize.",
  "Define the categories for classification.": "Define the categories for classification.",
  "Text can be assigned to multiple categories.": "Text can be assigned to multiple categories.",
  "Include confidence scores for each category.": "Include confidence scores for each category.",
  "Additional instructions for categorization.": "Additional instructions for categorization.",
  "Search for additional context to improve categorization.": "Search for additional context to improve categorization.",
  "Detailed description of the image you want to generate.": "Detailed description of the image you want to generate.",
  "Image generation model to use.": "Image generation model to use.",
  "Number of images to generate (1-10).": "Number of images to generate (1-10).",
  "Format of the generated images.": "Format of the generated images.",
  "Authorization headers are injected automatically from your connection.": "授权头自动从您的连接中注入。",
  "Enable for files like PDFs, images, etc..": "Enable for files like PDFs, images, etc..",
  "Text": "文本",
  "JSON Object": "JSON Object",
  "Auto (Model decides)": "Auto (Model decides)",
  "Always Search": "Always Search",
  "Never Search": "Never Search",
  "None (No tools)": "None (No tools)",
  "Required (Must use tool)": "Required (Must use tool)",
  "Default": "Default",
  "Low (Fewer tokens)": "Low (Fewer tokens)",
  "High (More tokens)": "High (More tokens)",
  "Low (Quick extraction)": "Low (Quick extraction)",
  "High (Deep analysis)": "High (Deep analysis)",
  "Low (Quick analysis)": "Low (Quick analysis)",
  "URL": "URL",
  "Base64 JSON": "Base64 JSON",
  "GET": "获取",
  "POST": "帖子",
  "PATCH": "PATCH",
  "PUT": "弹出",
  "DELETE": "删除",
  "HEAD": "黑色"
}