{
  "Grok by xAI": "xAI Grok",
  "AI chatbot by xAI that answers questions, generates text, extracts data, and provides real-time insights.": "AI chatbot by xAI that replace questions, generate text, expacts data and provide 实时洞察力。",
  "\n**Get your xAI API Key**\n\n1. Sign up at [xAI](https://x.ai)\n2. Go to your [API dashboard](https://console.x.ai)\n3. Generate a new API key\n4. Copy and paste the key here\n\nYour API key should start with `xai-`\n  ": "\n**Get your xAI API Key**\n\n1. Sign up at [xAI](https://x.ai)\n2. Go to your [API dashboard](https://console.x.ai)\n3. Generate a new API key\n4. Copy and paste the key here\n\nYour API key should start with `xai-`\n  ",
  "Ask Grok": "询问Grok",
  "Extract Data From Text": "从文本提取数据",
  "Categorize Text": "分类文本",
  "Generate Image": "生成图像",
  "Custom API Call": "自定义 API 呼叫",
  "Send prompts to Grok with real-time search, tools, and structured outputs.": "通过实时搜索、工具和结构化输出发送提示。",
  "Extract structured data fields from unstructured text (e.g., names, addresses, dates).": "从非结构性文本(如名称、地址、日期)中提取结构化数据字段。",
  "Assign categories to input text based on custom or predefined labels.": "根据自定义或预定义标签分配类别以输入文本。",
  "Create images from text prompts using Grok's image generation.": "使用 Grok 的图像生成从文本提示创建图像。",
  "Make a custom API call to a specific endpoint": "将一个自定义 API 调用到一个特定的终点",
  "Model": "模型",
  "Messages": "留言",
  "Quick Prompt (Alternative)": "快速提示 (备选)",
  "System Instructions": "系统说明",
  "Image URL (Optional)": "图像 URL (可选)",
  "Temperature": "温度",
  "Max Completion Tokens": "最大补全令牌",
  "Response Format": "响应格式",
  "JSON Schema": "JSON Schema",
  "Enable Real-Time Search": "启用实时搜索",
  "Search Mode": "搜索模式",
  "Max Search Results": "最大搜索结果",
  "Search Sources": "搜索来源",
  "Tools/Functions": "工具/函数",
  "Tool Choice": "工具选择",
  "Parallel Tool Calls": "并联工具调用",
  "Reasoning Effort": "合理努力",
  "Memory Key": "内存键",
  "Text to Extract From": "要提取的文本",
  "Extraction Instructions": "提取说明",
  "Fields to Extract": "要提取的字段",
  "Enable Context Search": "启用上下文搜索",
  "Strict Extraction": "严格的提款",
  "Include Confidence Scores": "包括信任分数",
  "Text to Categorize": "要分类的文本",
  "Categories": "类别管理",
  "Allow Multiple Categories": "允许多个类别",
  "Custom Instructions": "自定义说明",
  "Image Prompt": "Image Prompt",
  "Image Model": "图像模型",
  "Number of Images": "图片数量",
  "Method": "方法",
  "Headers": "信头",
  "Query Parameters": "查询参数",
  "Body": "正文内容",
  "Response is Binary ?": "响应是二进制的？",
  "No Error on Failure": "失败时没有错误",
  "Timeout (in seconds)": "超时(秒)",
  "Grok model to use for generating the response.": "用于生成响应的Grok 模型。",
  "Conversation messages for multi-turn conversations.": "多向对话的会话消息。",
  "Simple text prompt for single-turn conversations. Ignored if Messages is provided.": "单向对话的简单文本提示。如果提供消息则忽略。",
  "System message to set behavior and context.": "系统消息设置行为和上下文.",
  "Image URL for vision models. Works with quick prompt mode.": "视图模型的图像URL。快速模式可用。",
  "Controls randomness (0-2): 0 = deterministic, 1 = balanced, 2 = creative.": "控制随机性(0-2)：0 = 确定性，1 = 平衡，2 = 创造性。",
  "Maximum tokens for the response.": "响应的最大令牌。",
  "Output format for the response.": "响应输出格式。",
  "JSON schema for structured output (when response format is json_schema).": "结构输出的 JSON schema (当响应格式为 json_schema时)",
  "Allow Grok to search the web and X for current information.": "允许 Grok 搜索 web 和 X 获取当前信息。",
  "How to handle real-time data search.": "如何处理实时数据搜索。",
  "Maximum number of search results to use (1-30).": "要使用的最大搜索结果数量(1-30)。",
  "Sources to search in.": "要搜索的来源。",
  "Functions the model can call.": "模型可以调用的函数。",
  "How the model should use tools.": "模型应如何使用工具。",
  "Allow model to call multiple tools simultaneously.": "允许模型同时调用多个工具。",
  "How hard reasoning models should think (not for grok-4).": "硬性推理模式应该如何思考(而不是格罗克-4)。",
  "Keep conversation history across runs.": "在整个运行过程中保留对话历史记录。",
  "Grok model to use for data extraction.": "用于数据提取的Grok 模型。",
  "Text to extract data from.": "从中提取数据的文本。",
  "How to extract the data.": "如何提取数据。",
  "Define the structured fields to extract from the text.": "定义要从文本中提取的结构字段。",
  "Search for additional context to improve extraction.": "搜索其它上下文以改进提取。",
  "Only extract explicitly present information.": "仅提取明确显示的信息。",
  "How thoroughly to analyze the text.": "如何全面分析文本。",
  "Include confidence scores for extracted fields.": "包含已提取字段的信任分数。",
  "Grok model to use for text categorization.": "用于文本分类的Grok 模型。",
  "Text content to categorize.": "要分类的文本内容。",
  "Define the categories for classification.": "定义分类类别。",
  "Text can be assigned to multiple categories.": "文本可以分配到多个类别。",
  "Include confidence scores for each category.": "包括每个类别的信任分数。",
  "Additional instructions for categorization.": "分类的其他指示。",
  "Search for additional context to improve categorization.": "搜索其他上下文以改进分类。",
  "Detailed description of the image you want to generate.": "您想要生成的图像的详细描述。",
  "Image generation model to use.": "要使用的图像生成模型。",
  "Number of images to generate (1-10).": "要生成的图像数量(1-10)。",
  "Format of the generated images.": "生成图像的格式。",
  "Authorization headers are injected automatically from your connection.": "授权头自动从您的连接中注入。",
  "Enable for files like PDFs, images, etc..": "启用 PDF、图像等文件。",
  "Text": "文本",
  "JSON Object": "JSON 对象",
  "Auto (Model decides)": "自动(模型决定)",
  "Always Search": "总是搜索",
  "Never Search": "从不搜索",
  "None (No tools)": "无 (无工具)",
  "Required (Must use tool)": "必填(必须使用工具)",
  "Default": "默认设置",
  "Low (Fewer tokens)": "低 (Fewer 令牌)",
  "High (More tokens)": "高 (更多令牌)",
  "Low (Quick extraction)": "低 (快速提取)",
  "High (Deep analysis)": "高 (深入分析)",
  "Low (Quick analysis)": "低 (快速分析)",
  "URL": "网址",
  "Base64 JSON": "Base64 JSON",
  "GET": "获取",
  "POST": "帖子",
  "PATCH": "PATCH",
  "PUT": "弹出",
  "DELETE": "删除",
  "HEAD": "黑色"
}