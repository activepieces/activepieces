{
  "Grok by xAI": "Grok по xAI",
  "AI chatbot by xAI that answers questions, generates text, extracts data, and provides real-time insights.": "AI chatbot от xAI, который отвечает на вопросы, генерирует текст, извлекает данные и обеспечивает понимание в реальном времени.",
  "\n**Get your xAI API Key**\n\n1. Sign up at [xAI](https://x.ai)\n2. Go to your [API dashboard](https://console.x.ai)\n3. Generate a new API key\n4. Copy and paste the key here\n\nYour API key should start with `xai-`\n  ": "\n**Получить xAI API ключ**\n\n1. Зарегистрироваться на [xAI](https://x.ai)\n2. Перейдите на вашу [API dashboard](https://console.x.ai)\n3. Сгенерируйте новый ключ API\n4. Скопируйте и вставьте ключ здесь\n\nВаш ключ API должен начинаться с `xai-`\n  ",
  "Ask Grok": "Спросить Grok",
  "Extract Data From Text": "Извлечь данные из текста",
  "Categorize Text": "Классифицировать текст",
  "Generate Image": "Сгенерировать изображение",
  "Custom API Call": "Пользовательский вызов API",
  "Send prompts to Grok with real-time search, tools, and structured outputs.": "Отправлять подсказки в Grok с помощью поиска в реальном времени, инструментов и структурированных выходов.",
  "Extract structured data fields from unstructured text (e.g., names, addresses, dates).": "Извлечь структурированные поля данных из неструктурированного текста (например, имена, адреса, даты).",
  "Assign categories to input text based on custom or predefined labels.": "Назначить категории входному тексту на основе пользовательских или предопределенных меток.",
  "Create images from text prompts using Grok's image generation.": "Создавайте изображения из текстовых подсказок с помощью генерации изображений Grok.",
  "Make a custom API call to a specific endpoint": "Сделать пользовательский API вызов к определенной конечной точке",
  "Model": "Модель",
  "Messages": "Сообщения",
  "Quick Prompt (Alternative)": "Быстрая подсказка (альтернативная)",
  "System Instructions": "Системные инструкции",
  "Image URL (Optional)": "URL изображения (необязательно)",
  "Temperature": "Температура",
  "Max Completion Tokens": "Макс. токены завершения",
  "Response Format": "Формат ответа",
  "JSON Schema": "JSON Schema",
  "Enable Real-Time Search": "Включить поиск в реальном времени",
  "Search Mode": "Режим поиска",
  "Max Search Results": "Макс. результатов поиска",
  "Search Sources": "Источники поиска",
  "Tools/Functions": "Инструменты/Функции",
  "Tool Choice": "Выбор инструмента",
  "Parallel Tool Calls": "Параллельные вызовы инструментов",
  "Reasoning Effort": "Разумный Усилий",
  "Memory Key": "Ключ памяти",
  "Text to Extract From": "Текст для извлечения из",
  "Extraction Instructions": "Инструкции по извлечению",
  "Fields to Extract": "Поля для извлечения",
  "Enable Context Search": "Включить поиск контекста",
  "Strict Extraction": "Строгое извлечение",
  "Include Confidence Scores": "Включить баллы доверия",
  "Text to Categorize": "Текст для классификации",
  "Categories": "Категории",
  "Allow Multiple Categories": "Разрешить несколько категорий",
  "Custom Instructions": "Пользовательские инструкции",
  "Image Prompt": "Image Prompt",
  "Image Model": "Модель изображения",
  "Number of Images": "Количество изображений",
  "Method": "Метод",
  "Headers": "Заголовки",
  "Query Parameters": "Параметры запроса",
  "Body": "Тело",
  "No Error on Failure": "Нет ошибок при ошибке",
  "Timeout (in seconds)": "Таймаут (в секундах)",
  "Grok model to use for generating the response.": "Grok модель для использования для генерации ответа.",
  "Conversation messages for multi-turn conversations.": "Сообщения в диалоге для многократных разговоров.",
  "Simple text prompt for single-turn conversations. Ignored if Messages is provided.": "Простая текстовая подсказка для разговоров с одним поворотом. Игнорируется, если сообщения предоставлены.",
  "System message to set behavior and context.": "Системное сообщение для задания поведения и контекста.",
  "Image URL for vision models. Works with quick prompt mode.": "URL изображения для видовых моделей. Работает с быстрыми запросами.",
  "Controls randomness (0-2): 0 = deterministic, 1 = balanced, 2 = creative.": "Контролирует случайность (0-2): 0 = детерминист, 1 = сбалансированный, 2 = креативный.",
  "Maximum tokens for the response.": "Максимальное количество токенов для ответа.",
  "Output format for the response.": "Формат вывода для ответа.",
  "JSON schema for structured output (when response format is json_schema).": "JSON схема структурированного вывода (когда формат ответа json_schema).",
  "Allow Grok to search the web and X for current information.": "Разрешить Grok искать в Интернете и X для текущей информации.",
  "How to handle real-time data search.": "Как справиться с поиском данных в реальном времени.",
  "Maximum number of search results to use (1-30).": "Максимальное количество используемых результатов поиска (1-30).",
  "Sources to search in.": "Источники для поиска.",
  "Functions the model can call.": "Функции, которые модель может вызывать.",
  "How the model should use tools.": "Как модель должна использовать инструменты.",
  "Allow model to call multiple tools simultaneously.": "Модель вызова нескольких инструментов одновременно.",
  "How hard reasoning models should think (not for grok-4).": "Насколько трудно рассуждать модели должны думать (не для грок-4).",
  "Keep conversation history across runs.": "Хранить историю разговоров во время запуска.",
  "Grok model to use for data extraction.": "Модель Grok, используемая для извлечения данных.",
  "Text to extract data from.": "Текст для извлечения данных.",
  "How to extract the data.": "Как извлечь данные.",
  "Define the structured fields to extract from the text.": "Определить структурированные поля для извлечения из текста.",
  "Search for additional context to improve extraction.": "Поиск дополнительных контекстов для улучшения извлечения.",
  "Only extract explicitly present information.": "Только извлечь явно представленную информацию.",
  "How thoroughly to analyze the text.": "Как тщательно анализировать текст.",
  "Include confidence scores for extracted fields.": "Включает оценки доверия для извлеченных полей.",
  "Grok model to use for text categorization.": "Модель Grok для текстовой категоризации.",
  "Text content to categorize.": "Текстовый контент для категоризации.",
  "Define the categories for classification.": "Определить категории для классификации.",
  "Text can be assigned to multiple categories.": "Текст может быть привязан к нескольким категориям.",
  "Include confidence scores for each category.": "Включает оценки доверия для каждой категории.",
  "Additional instructions for categorization.": "Дополнительные инструкции по категоризации.",
  "Search for additional context to improve categorization.": "Поиск дополнительных контекстов для улучшения категоризации.",
  "Detailed description of the image you want to generate.": "Подробное описание изображения, которое вы хотите создать.",
  "Image generation model to use.": "Используемая модель генерации изображения.",
  "Number of images to generate (1-10).": "Количество изображений для генерации (1-10).",
  "Format of the generated images.": "Формат генерируемых изображений.",
  "Authorization headers are injected automatically from your connection.": "Заголовки авторизации включаются автоматически из вашего соединения.",
  "Text": "Текст",
  "JSON Object": "Объект JSON",
  "Auto (Model decides)": "Автоматически (Модель принимает решения)",
  "Always Search": "Всегда искать",
  "Never Search": "Никогда не искать",
  "None (No tools)": "Нет (Нет инструментов)",
  "Required (Must use tool)": "Требуется (Необходимо использовать инструмент)",
  "Default": "По умолчанию",
  "Low (Fewer tokens)": "Низкий (меньше токенов)",
  "High (More tokens)": "Высокий (Больше токенов)",
  "Low (Quick extraction)": "Низкий (быстрое извлечение)",
  "High (Deep analysis)": "Высокий (Дип-анализ)",
  "Low (Quick analysis)": "Низкий (быстрый анализ)",
  "URL": "URL",
  "Base64 JSON": "JSON Base64",
  "GET": "ПОЛУЧИТЬ",
  "POST": "ПОСТ",
  "PATCH": "ПАТЧ",
  "PUT": "ПОКУПИТЬ",
  "DELETE": "УДАЛИТЬ",
  "HEAD": "HEAD"
}