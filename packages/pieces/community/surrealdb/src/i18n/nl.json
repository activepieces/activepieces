{
  "SurrealDB": "SurrealDB",
  "Multi Model Database": "Multi Model Database",
  "Connection URL": "Connectie URL",
  "Database": "Database",
  "Namespace": "Namespace",
  "Username": "Gebruikersnaam",
  "Password": "Wachtwoord",
  "Connection string, e.g. http://1.2.3.5:8000.": "Connectie string, bijvoorbeeld http://1.2.3.5:8000.",
  "A string indicating the name of the database to connect to.": "Een string die de naam van de database aangeeft waarmee je verbinding wilt maken.",
  "As string indicating the namespace of the database to connect to.": "Als string die de namespace van de database aangeeft waarmee verbinding kan worden gemaakt.",
  "As string indicating the username of the database to connect to.": "Als tekenreeks die de gebruikersnaam van de database aangeeft waarmee je verbinding wilt maken.",
  "As string indicating the password of the database to connect to.": "Als tekenreeks die het wachtwoord van de database aangeeft waarmee u verbinding wilt maken.",
  "Run Query": "Query uitvoeren",
  "Run a query in SurrealDB.": "Voer een query uit in SurrealDB.",
  "Markdown": "Markdown",
  "Query": "Zoekopdracht",
  "Arguments": "Argumenten",
  "Query Timeout (ms)": "Time-out zoekopdracht (ms)",
  "Application Name": "Applicatie Naam",
  "\n        **NOTE:** Prevent SQL injection by using parameterized queries.\n      ": "\n        **NOTE:** Voorkom SQL-injectie door het gebruik van geparameteriseerde queries.\n      ",
  "Provide a SurrealDB query string to execute.": "Geef een SurrealDB query string op om uit te voeren.",
  "\n        **NOTE:** Query example: `SELECT * FROM table_name WHERE name = $name`. Then add the name parameter in the arguments.\n      ": "\n        **NOTE:** Query voorbeeld: `SELECT * FROM table_name WHERE name = $name`. Voeg dan de naam parameter toe in de argumenten.\n      ",
  "Add all arguments as names here, don't add the $ sign.": "Voeg hier alle argumenten toe als namen, voeg het $ teken niet toe.",
  "The maximum time to wait for a query to complete before timing out.": "De maximale tijd om te wachten tot een query is voltooid voordat er een time-out is opgetreden.",
  "An identifier for the client application executing the query.": "Een id voor de client applicatie die de query uitvoert.",
  "New Row": "Nieuwe rij",
  "Triggers when a new row is added to the defined table.": "Triggert wanneer een nieuwe rij wordt toegevoegd aan de gedefinieerde tabel.",
  "Table name": "Tabel naam",
  "Column to order by": "Kolom sorteren op",
  "Order Direction": "Order richting",
  "**NOTE:** The trigger fetches the latest rows using the provided order by column (newest first), and then will keep polling until the previous last row is reached. It's suggested to add a created_at timestamp. `DEFINE FIELD OVERWRITE createdAt ON schedule VALUE time::now() READONLY;`": "**Let op:** De trigger haalt de laatste rijen met behulp van de opgegeven volgorde per kolom (nieuwste eerst), en zal dan doorgaan met stemmen tot de vorige rij is bereikt. Het wordt aangeraden om een created_at timestamp toe te voegen. `DEFINE VIELD OVERWRITE is aangemaakt. Bij planning VALUE tijd::now() READONLY;`",
  "Use something like a created timestamp.": "Gebruik zoiets als een aangemaakte tijdstempel.",
  "The direction to sort by such that the newest rows are fetched first.": "De richting die gesorteerd moet worden zodat de nieuwste rijen eerst opgehaald worden.",
  "Ascending": "Oplopend",
  "Descending": "Aflopend"
}